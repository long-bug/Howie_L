# 1. 为什么学习python
# 2. 通过什么途径学习的python
# 3.公司线上和开发环境使用的什么系统？
#     答：linux
# 4. python和Java，PHP，c 。c# ,c++等其他语言的对比
# python是解释型编程语言，代码简洁，应用领域广泛，
#
# C语言，它既有高级语言的特点，又具有汇编语言的特点，它是结构式语言。
# C语言的优点：简洁紧凑、灵活方便；运算符丰富；数据类型丰富；表达方式灵活实用；允许直接访问物理地址，对硬件进行操作；生成目标代码质量高，程序执行效率高；可移植性好；表达力强；
# C语言的缺点：C语言的缺点主要表现在数据的封装性上，这一点使得C在数据的安全性上有很大缺陷，这也是C和C++的一大区别。
# C语言的语法限制不太严格，对变量的类型约束不严格，影响程序的安全性，对数组下标越界不作检查等。
# 从应用的角度，C语言比其他高级语言较难掌握。也就是说，对用C语言的人，要求对程序设计更熟练一些。
#
# C++是C语言的继承，它既可以进行C语言的过程化程序设计，又可以进行以抽象数据类型为特点的基于对象的程序设计，还可以进行以继承和多态为特点的面向对象的程序设计。
#
# C#是微软公司发布的一种面向对象的、运行于.NET Framework之上的高级程序设计语言。
#
# Java 技术具有卓越的通用性、高效性、平台移植性和安全性，Java是一种可以撰写跨平台应用软件的面向对象的程序设计语言
#
# PHP是一种通用开源脚本语言。语法吸收了C语言、Java和Perl的特点，入门门槛较低，易于学习，使用广泛，主要适用于Web开发领域。
#
# python语言，是一种面向对象、直译式计算机程序设计语言，Python语法简洁而清晰，具有丰富和强大的类库。它常被昵称为胶水语言，
# 它能够很轻松的把用其他语言制作的各种模块（尤其是C/C++）轻松地联结在一起。
# 常见的一种应用情形是，使用python快速生成程序的原型（有时甚至是程序的最终界面），然后对其中有特别要求的部分，用更合适的语言改写。
# Python是完全面向对象的语言。函数、模块、数字、字符串都是对象。
# 并且完全支持继承、重载、派生、多继承，有益于增强源代码的复用性。
# Python支持重载运算符和动态类型。相对于Lisp这种传统的函数式编程语言，
# Python对函数式设计只提供了有限的支持。有两个标准库(functools, itertools)提供了Haskell和Standard ML中久经考验的函数式程序设计工具。
# Python本身被设计为可扩充的。并非所有的特性和功能都集成到语言核心。
# Python提供了丰富的API和工具，以便程序员能够轻松地使用C语言、C++、Cython来编写扩充模块。
# Python编译器本身也可以被集成到其它需要脚本语言的程序内。
# 因此，很多人还把Python作为一种“胶水语言”（glue language）使用。使用Python将其他语言编写的程序进行集成和封装。


# 5. 简述解释型和编译型编程语言？
# 解释型：编译速度快
# 编译型：